# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#1. What is the average energy of the top 5 most popular songs?
  SELECT avg(energy),
  track_name,
  popularity
  FROM BIT_DB.Spotifydata
  WHERE popularity >90
  GROUP BY energy
  ORDER BY popularity desc
  LIMIT 5;


#2. What are the top 5 artist by popularity?
  SELECT artist_name,
  track_name,
  popularity
  FROM BIT_DB.Spotifydata
  ORDER BY popularity desc
  LIMIT 5;


#3. What is the average energy of the songs?
  SELECT avg(energy) 
  FROM BIT_DB.Spotifydata;


#4. What songs are top 5 in popularity but low in energy?
  SELECT energy,
  popularity,
  artist_name,
  track_name
  FROM BIT_DB.Spotifydata
  WHERE popularity >90
  AND energy <.6
  ORDER BY popularity;
